@model Model.Ingresos
@{
    ViewBag.Title = "Index";
    Layout = null;
}
<style>
    .chart {
        width: 100%; 
        min-height: 450px;
    }
</style>
<div class="container-fluid">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header card-header-icon" data-background-color="green">
                <i class="material-icons">monetization_on</i>
            </div>
            <div class="card-content">
                <h4>Operaciones</h4>
                <br />
                <!--<div class="row">
                    <div class="col-md-4 col-sm-12">
                        <button class="btn btn-success" id="Nuevo" data-toggle="modal" data-target="#myModal"><i class="material-icons">add</i>Nueva operacion</button>
                    </div>
                </div>-->
                
                <div class="row">
                    <div class="table-responsive">
                        <table class="table table-striped table-no-bordered table-hover dataTable dtr-inline" id="datatables" style="width:100%;">
                            <thead>
                                <tr>
                                    <th class="disabled-sorting text-center">Fecha</th>
                                    <th>De</th>
                                    <th>Cliente</th>
                                    <th>Concepto</th>
                                    <th class="text-center">Clav Prod y Serv</th>
                                    <th class="text-center">Metodo de Pago</th>
                                    <th class="text-center">Egresos MXN</th>
                                    <th class="text-center">Egresos USD</th>
                                    <th class="text-center">Ingresos MXN</th>
                                    <th class="text-center">Ingresos USD</th>
                                    <th class="disabled-sorting text-right sorting">Acciones</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var ingreso in Model.ingresos)
                                {
                                    <tr id="@ingreso.Id">
                                        <td class="text-center">
                                            @ingreso.FechaCreacion.Day/@ingreso.FechaCreacion.Month/@ingreso.FechaCreacion.Year
                                        </td>
                                        <td>@Model.Proveedores.Where(x => x.Id == Model.Adeudos.Where(y => y.Id == ingreso.IdAdeudo).First().IdProveedor).FirstOrDefault().Nombre</td>
                                        <td>
                                        @{ 
                                            try {

                                                var Adeudo = Model.Adeudos.Where(x => x.Id == ingreso.IdAdeudo).FirstOrDefault();
                                                if (Guid.Parse("f2652e03-da5d-4ae2-ab68-b5f82348cde6") == Adeudo.IdCliente)
                                                {
                                                    var a = 0;

                                                }

                                                var Cliente = Model.Clientes.Where(c => c.IdCliente == Adeudo.IdCliente).FirstOrDefault();
                                                @Cliente.Nombres @Cliente.ApellidoPaterno   @Cliente.ApellidoMaterno
                                            } catch (Exception ex) {
                                                WriteLiteral("Error:" + ex.Message+" " + ex.StackTrace);
                                            }
                                        }
                                        </td>
                                        <td>@Model.Adeudos.Where(x => x.Id == ingreso.IdAdeudo).First().Concepto</td>
                                        <td class="text-center">@Model.Adeudos.Where(x => x.Id == ingreso.IdAdeudo).First().ClaveProdServ</td>
                                        <td class="text-center">@ingreso.MetodoDePago</td>
                                        <td class="text-center">@ingreso.Abonos </td>
                                        <td class="text-center">@ingreso.AbonosUSD</td>
                                        <td class="text-center">@ingreso.Cargos</td>
                                        <td class="text-center">@ingreso.CargosUSD</td>
                                        <td><button class="btn btn-danger btn-simple remove" rel="tooltip" data-original-title="Eliminar Operacion"><i class="material-icons">delete</i></button></td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

            </div>

        </div>

    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        var $FilterDate = "";
        history.pushState(null, "", "/Operaciones");
        $('#datatables').DataTable({
            "pagingType": "full_numbers",
            "lengthMenu": [
                [10, 25, 50, -1],
                [10, 25, 50, "Todos"]
            ],
            "bSort": false,
            dom: "<'row buttons'B>" +
                "<'row'<'col-sm-3'l><'col-sm-3 fechas text-center'><'col-sm-4 metodoDePago text-center' ><'col-sm-2 text-right  buscar'>>" +
                "<'row'<'col-sm-12'tr>>" +
                "<'row'<'col-sm-5'i><'col-sm-7'p>>",
            buttons: [
                {
                    extend: 'copy',
                    text: '<i class="material-icons text-info" rel="tooltip" data-original-title="Copiar">content_copy</i>',
                    exportOptions: {
                        modifier: {
                            page: 'current'
                        },
                        columns: [0, 1, 2, 3,4,5,6,7,8]
                    },
                },
                {
                    extend: 'csv',
                    text: '<i class="fa fa-file-text-o fa-lg text-primary" aria-hidden="true" rel="tooltip" data-original-title="Exportar CSV"></i>',
                    exportOptions: {
                        modifier: {
                            page: 'current'
                        },
                        columns: [0, 1, 2, 3, 4,5,6,7,8]
                    }
                },
                {
                    extend: 'excel',
                    text: '<i class="fa fa-file-excel-o fa-lg" aria-hidden="true" rel="tooltip" data-original-title="Exportar excel"></i>',
                    exportOptions: {
                        modifier: {
                            page: 'current'
                        },
                        columns: [0, 1, 2, 3, 4,5,6,7,8]
                    }
                },
                {
                    extend: 'pdf',
                    text: '<i class="material-icons text-danger" rel="tooltip" data-original-title="Exportar PDF">picture_as_pdf</i>',
                    exportOptions: {
                        modifier: {
                            page: 'current'
                        },
                        columns: [0, 1, 2, 3, 4,5,6,7,8]
                    }
                },
                {
                    extend: 'print',
                    autoPrint: true,
                    text: '<i class="material-icons text-warning" rel="tooltip" data-original-title="Imprimir">print</i>',
                    exportOptions: {
                        modifier: {
                            page: 'current'
                        },
                        columns: [0, 1, 2, 3, 4,5,6,7,8]
                    },

                }
            ],
            responsive: true,
            language: {
                "search": "<div class=\"form-group form-inline\" style=\"margin:0px;\">_INPUT_</div>",
                "searchPlaceholder": "Buscar en Registros",
                "lengthMenu": "<div class=\"form-group  form-group-sm\"><label class=\"control-label\">Mostrar</label> _MENU_ <label class=\"control-label\">Registros</label></div>",
                "zeroRecords": "No hay registros",
                "info": "Pagina _PAGE_ de _PAGES_",
                "infoEmpty": "No hay registros disponibles",
                "infoFiltered": "(filtrado de _MAX_ registros)",
                "sSearch": "<label class=\"control-label\">Buscar</label>",
                "oPaginate": {
                    "sFirst": "Primero",
                    "sPrevious": "Anterior",
                    "sNext": "Siguiente",
                    "sLast": "Ultimo"
                }
            }
        });
        var MetodoDePago = '<div class="form-group form-group-sm">';
        MetodoDePago += '<label for="MetodoDePago" class="control-label">  Forma de Pago:</label>';
        MetodoDePago += '<select class="form-control" id="MetodoDePago" required>';
        MetodoDePago +=  '<option selected value>Todos</option>';
        @foreach (var item in ViewBag.FormaPago) {
            WriteLiteral("\nMetodoDePago+='<option value=\"" + item.c_FormaPago + "\">" + item.Descripcion + "</option>';");
        }        
        MetodoDePago += '</select ></div >';
        $('.metodoDePago').html(MetodoDePago);
        $('.fechas').append('<div class="form-group form-group-sm"><label for="Fecha" class="control-label">Fecha:</label><input id="Fecha" type="month" class="form-control"/></div>');
        $('.buscar').append('<div class="form-group form-group-sm"><input class=\"form-control\" id=\"Buscar\" placeholder="Buscar en Registros"/></div>');
        $('.dt-buttons').append('<button class="btn btn-simple" style="margin:0;padding:0;" rel="tooltip" data-original-title="Agregar Operacion" id="Nuevo" data-toggle="modal" data-target="#myModal"><i class="material-icons">add</i></button>')
        var table = $('#datatables').DataTable();
        table.on('click', '.cancel', function () {
            $tr = $(this).closest('tr');
            var data = table.row($tr).data();
            var id = table.row($tr).id();
        });
        $("#Buscar").keyup(function () {
            table.search($(this).val()).draw();
        });
        $("#Fecha").change(function () {
            $FilterDate = $(this).val();
            console.log($FilterDate);
            if ($FilterDate == "") {
                table.column(0).search("").draw();
            }else{
                var array = $FilterDate.split('-');
                if (parseInt(array[1]) <10) {
                    table.column(0).search(array[1].replace("0", "") + "/" + array[0]).draw();
                } else {
                    table.column(0).search(array[1] + "/" + array[0]).draw();
                }
                console.log(array[1] +"/" + array[0]);
            }
            /*//if ($(this).val=="")

            if ($("#Mes").val() != "")
                $FilterDate += "/" + $("#Mes").val();
            if ($("#Año").val() != "" && $("#Mes").val() != "")
                $FilterDate += "/" + $("#Año").val();
            table.column(0).search($FilterDate).draw();*/
        });
        $("#MetodoDePago").change(function () {
            var date = $(this).val();
            table.column(4).search(date).draw();
        });
        // Edit record
        table.on('click', '.edit', function () {
            $tr = $(this).closest('tr');
            var data = table.row($tr).data();
            alert('You press on Row: ' + data[0] + ' ' + data[1] + ' ' + data[2] + '\'s row.');
        });

        // Delete a record
        table.on('click', '.remove', function (e) {
            $tr = $(this).closest('tr');
            var id = table.row($tr).id();
            DeleteRegister(id, '/Operaciones/Eliminar', '#datatables');
        });
        //Like record
        table.on('click', '.like', function () {
            alert('You clicked on Like button');
        });
        @{
            Model.AvenzoSeguridadEntities avenzo = new Model.AvenzoSeguridadEntities();
            var usuario = avenzo.Usuarios.Where(x => x.Usuario == User.Identity.Name).FirstOrDefault();
        }
        $('#Nuevo').click(function () {
            $.get("/Usuarios/VerificarTimbres?IdTemp=@{WriteLiteral(usuario.Id);}", function (data, status) {
                if (data.error == false) {
                    OpenModal('@Url.Content("/Operaciones/Nuevo")');
                } else {
                    OpenModal("/Usuarios/_FaltaTimbres");
                }
            });
        });
        $('.card .material-datatables label').addClass('form-group');
        $(".buttons-copy").click(function () {
            showNotification('top', 'center', 'info', '<i class="material-icons">content_copy</i>', 'Se ha Copiado correctamente');
        });
        $(".buttons-csv").click(function () {
            showNotification('top', 'center', 'primary', '<i class="fa fa-file-text-o fa-lg text-primary" aria-hidden="true"></i>', 'Se descargado el cvs correctamente');
        });
        $(".buttons-excel").click(function () {
            showNotification('top', 'center', 'success', '<i class="fa fa-file-excel-o fa-lg" aria-hidden="true"></i>', 'Se descargado el excel correctamente');
        });
        $(".buttons-pdf").click(function () {
            showNotification('top', 'center', 'danger', '<i class="material-icons">picture_as_pdf</i>', 'Se descargado el PDF correctamente');
        });
        $('[rel="tooltip"]').tooltip();
    });
</script>